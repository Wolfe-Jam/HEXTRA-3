{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _utils = require(\"@jimp/utils\");\n\n/**\n * Flip the image horizontally\n * @param {boolean} horizontal a Boolean, if true the image will be flipped horizontally\n * @param {boolean} vertical a Boolean, if true the image will be flipped vertically\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\nfunction flipFn(horizontal, vertical, cb) {\n  if (typeof horizontal !== \"boolean\" || typeof vertical !== \"boolean\") return _utils.throwError.call(this, \"horizontal and vertical must be Booleans\", cb);\n  var bitmap = Buffer.alloc(this.bitmap.data.length);\n  this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function (x, y, idx) {\n    var _x = horizontal ? this.bitmap.width - 1 - x : x;\n    var _y = vertical ? this.bitmap.height - 1 - y : y;\n    var _idx = this.bitmap.width * _y + _x << 2;\n    var data = this.bitmap.data.readUInt32BE(idx);\n    bitmap.writeUInt32BE(data, _idx);\n  });\n  this.bitmap.data = Buffer.from(bitmap);\n  if ((0, _utils.isNodePattern)(cb)) {\n    cb.call(this, null, this);\n  }\n  return this;\n}\nvar _default = function _default() {\n  return {\n    flip: flipFn,\n    mirror: flipFn\n  };\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_utils","require","flipFn","horizontal","vertical","cb","throwError","call","bitmap","Buffer","alloc","data","length","scanQuiet","width","height","x","y","idx","_x","_y","_idx","readUInt32BE","writeUInt32BE","from","isNodePattern","_default","flip","mirror"],"sources":["/Users/wolfejam/HEXTRA-3/node_modules/@jimp/plugin-flip/src/index.js"],"sourcesContent":["import { isNodePattern, throwError } from \"@jimp/utils\";\n\n/**\n * Flip the image horizontally\n * @param {boolean} horizontal a Boolean, if true the image will be flipped horizontally\n * @param {boolean} vertical a Boolean, if true the image will be flipped vertically\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\nfunction flipFn(horizontal, vertical, cb) {\n  if (typeof horizontal !== \"boolean\" || typeof vertical !== \"boolean\")\n    return throwError.call(\n      this,\n      \"horizontal and vertical must be Booleans\",\n      cb\n    );\n\n  const bitmap = Buffer.alloc(this.bitmap.data.length);\n  this.scanQuiet(\n    0,\n    0,\n    this.bitmap.width,\n    this.bitmap.height,\n    function (x, y, idx) {\n      const _x = horizontal ? this.bitmap.width - 1 - x : x;\n      const _y = vertical ? this.bitmap.height - 1 - y : y;\n      const _idx = (this.bitmap.width * _y + _x) << 2;\n      const data = this.bitmap.data.readUInt32BE(idx);\n\n      bitmap.writeUInt32BE(data, _idx);\n    }\n  );\n\n  this.bitmap.data = Buffer.from(bitmap);\n\n  if (isNodePattern(cb)) {\n    cb.call(this, null, this);\n  }\n\n  return this;\n}\n\nexport default () => ({\n  flip: flipFn,\n  mirror: flipFn,\n});\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;;AAEA;;;;;;;AAOA,SAASC,MAATA,CAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,EAAtC,EAA0C;EACxC,IAAI,OAAOF,UAAP,KAAsB,SAAtB,IAAmC,OAAOC,QAAP,KAAoB,SAA3D,EACE,OAAOJ,MAAA,CAAAM,UAAA,CAAWC,IAAX,CACL,IADK,EAEL,0CAFK,EAGLF,EAHK,CAAP;EAMF,IAAMG,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAa,KAAKF,MAAL,CAAYG,IAAZ,CAAiBC,MAA9B,CAAf;EACA,KAAKC,SAAL,CACE,CADF,EAEE,CAFF,EAGE,KAAKL,MAAL,CAAYM,KAHd,EAIE,KAAKN,MAAL,CAAYO,MAJd,EAKE,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,GAAhB,EAAqB;IACnB,IAAMC,EAAE,GAAGhB,UAAU,GAAG,KAAKK,MAAL,CAAYM,KAAZ,GAAoB,CAApB,GAAwBE,CAA3B,GAA+BA,CAApD;IACA,IAAMI,EAAE,GAAGhB,QAAQ,GAAG,KAAKI,MAAL,CAAYO,MAAZ,GAAqB,CAArB,GAAyBE,CAA5B,GAAgCA,CAAnD;IACA,IAAMI,IAAI,GAAI,KAAKb,MAAL,CAAYM,KAAZ,GAAoBM,EAApB,GAAyBD,EAA1B,IAAiC,CAA9C;IACA,IAAMR,IAAI,GAAG,KAAKH,MAAL,CAAYG,IAAZ,CAAiBW,YAAjB,CAA8BJ,GAA9B,CAAb;IAEAV,MAAM,CAACe,aAAP,CAAqBZ,IAArB,EAA2BU,IAA3B;EACD,CAZH;EAeA,KAAKb,MAAL,CAAYG,IAAZ,GAAmBF,MAAM,CAACe,IAAP,CAAYhB,MAAZ,CAAnB;EAEA,IAAI,IAAAR,MAAA,CAAAyB,aAAA,EAAcpB,EAAd,CAAJ,EAAuB;IACrBA,EAAE,CAACE,IAAH,CAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB;EACD;EAED,OAAO,IAAP;AACD;eAEc,SAAAmB,SAAA;EAAA,OAAO;IACpBC,IAAI,EAAEzB,MADc;IAEpB0B,MAAM,EAAE1B;EAFY,CAAP;AAAA,C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}