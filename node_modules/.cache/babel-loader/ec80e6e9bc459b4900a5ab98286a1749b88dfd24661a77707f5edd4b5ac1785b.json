{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _jpegJs = _interopRequireDefault(require(\"jpeg-js\"));\nvar _utils = require(\"@jimp/utils\");\nvar MIME_TYPE = \"image/jpeg\";\nvar _default = function _default() {\n  return {\n    mime: (0, _defineProperty2[\"default\"])({}, MIME_TYPE, [\"jpeg\", \"jpg\", \"jpe\"]),\n    constants: {\n      MIME_JPEG: MIME_TYPE\n    },\n    decoders: (0, _defineProperty2[\"default\"])({}, MIME_TYPE, _jpegJs[\"default\"].decode),\n    encoders: (0, _defineProperty2[\"default\"])({}, MIME_TYPE, function (image) {\n      return _jpegJs[\"default\"].encode(image.bitmap, image._quality).data;\n    }),\n    \"class\": {\n      // The quality to be used when saving JPEG images\n      _quality: 100,\n      /**\n       * Sets the quality of the image when saving as JPEG format (default is 100)\n       * @param {number} n The quality to use 0-100\n       * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n       * @returns {Jimp} this for chaining of methods\n       */\n      quality: function quality(n, cb) {\n        if (typeof n !== \"number\") {\n          return _utils.throwError.call(this, \"n must be a number\", cb);\n        }\n        if (n < 0 || n > 100) {\n          return _utils.throwError.call(this, \"n must be a number 0 - 100\", cb);\n        }\n        this._quality = Math.round(n);\n        if ((0, _utils.isNodePattern)(cb)) {\n          cb.call(this, null, this);\n        }\n        return this;\n      }\n    }\n  };\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_jpegJs","_interopRequireDefault","require","_utils","MIME_TYPE","_default","mime","_defineProperty2","constants","MIME_JPEG","decoders","decode","encoders","image","encode","bitmap","_quality","data","quality","n","cb","throwError","call","Math","round","isNodePattern"],"sources":["/Users/wolfejam/HEXTRA-3/node_modules/@jimp/jpeg/src/index.js"],"sourcesContent":["import JPEG from \"jpeg-js\";\nimport { throwError, isNodePattern } from \"@jimp/utils\";\n\nconst MIME_TYPE = \"image/jpeg\";\n\nexport default () => ({\n  mime: { [MIME_TYPE]: [\"jpeg\", \"jpg\", \"jpe\"] },\n\n  constants: {\n    MIME_JPEG: MIME_TYPE,\n  },\n\n  decoders: {\n    [MIME_TYPE]: JPEG.decode,\n  },\n\n  encoders: {\n    [MIME_TYPE]: (image) => JPEG.encode(image.bitmap, image._quality).data,\n  },\n\n  class: {\n    // The quality to be used when saving JPEG images\n    _quality: 100,\n    /**\n     * Sets the quality of the image when saving as JPEG format (default is 100)\n     * @param {number} n The quality to use 0-100\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp} this for chaining of methods\n     */\n    quality(n, cb) {\n      if (typeof n !== \"number\") {\n        return throwError.call(this, \"n must be a number\", cb);\n      }\n\n      if (n < 0 || n > 100) {\n        return throwError.call(this, \"n must be a number 0 - 100\", cb);\n      }\n\n      this._quality = Math.round(n);\n\n      if (isNodePattern(cb)) {\n        cb.call(this, null, this);\n      }\n\n      return this;\n    },\n  },\n});\n"],"mappings":";;;;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAME,SAAS,GAAG,YAAlB;eAEe,SAAAC,SAAA;EAAA,OAAO;IACpBC,IAAI,MAAAC,gBAAA,iBAAKH,SAAL,EAAiB,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,CAAjB,CADgB;IAGpBI,SAAS,EAAE;MACTC,SAAS,EAAEL;IADF,CAHS;IAOpBM,QAAQ,MAAAH,gBAAA,iBACLH,SADK,EACOJ,OAAA,YAAKW,MADZ,CAPY;IAWpBC,QAAQ,MAAAL,gBAAA,iBACLH,SADK,EACO,UAACS,KAAD;MAAA,OAAWb,OAAA,YAAKc,MAAL,CAAYD,KAAK,CAACE,MAAlB,EAA0BF,KAAK,CAACG,QAAhC,EAA0CC,IAArD;IAAA,CADP,CAXY;IAepB,SAAO;MACL;MACAD,QAAQ,EAAE,GAFL;MAGL;;;;;;MAMAE,OATK,WAAAA,QASGC,CATH,EASMC,EATN,EASU;QACb,IAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2B;UACzB,OAAOhB,MAAA,CAAAkB,UAAA,CAAWC,IAAX,CAAgB,IAAhB,EAAsB,oBAAtB,EAA4CF,EAA5C,CAAP;QACD;QAED,IAAID,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAG,GAAjB,EAAsB;UACpB,OAAOhB,MAAA,CAAAkB,UAAA,CAAWC,IAAX,CAAgB,IAAhB,EAAsB,4BAAtB,EAAoDF,EAApD,CAAP;QACD;QAED,KAAKJ,QAAL,GAAgBO,IAAI,CAACC,KAAL,CAAWL,CAAX,CAAhB;QAEA,IAAI,IAAAhB,MAAA,CAAAsB,aAAA,EAAcL,EAAd,CAAJ,EAAuB;UACrBA,EAAE,CAACE,IAAH,CAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB;QACD;QAED,OAAO,IAAP;MACD;IAzBI;EAfa,CAAP;AAAA,C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}