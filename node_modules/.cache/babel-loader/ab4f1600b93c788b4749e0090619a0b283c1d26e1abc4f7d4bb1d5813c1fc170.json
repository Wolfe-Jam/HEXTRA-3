{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _omggif = _interopRequireDefault(require(\"omggif\"));\nvar _gifwrap = require(\"gifwrap\");\nvar MIME_TYPE = \"image/gif\";\nvar _default = function _default() {\n  return {\n    mime: (0, _defineProperty2[\"default\"])({}, MIME_TYPE, [\"gif\"]),\n    constants: {\n      MIME_GIF: MIME_TYPE\n    },\n    decoders: (0, _defineProperty2[\"default\"])({}, MIME_TYPE, function (data) {\n      var gifObj = new _omggif[\"default\"].GifReader(data);\n      var gifData = Buffer.alloc(gifObj.width * gifObj.height * 4);\n      gifObj.decodeAndBlitFrameRGBA(0, gifData);\n      return {\n        data: gifData,\n        width: gifObj.width,\n        height: gifObj.height\n      };\n    }),\n    encoders: (0, _defineProperty2[\"default\"])({}, MIME_TYPE, function (data) {\n      var bitmap = new _gifwrap.BitmapImage(data.bitmap);\n      _gifwrap.GifUtil.quantizeDekker(bitmap, 256);\n      var newFrame = new _gifwrap.GifFrame(bitmap);\n      var gifCodec = new _gifwrap.GifCodec();\n      return gifCodec.encodeGif([newFrame], {}).then(function (newGif) {\n        return newGif.buffer;\n      });\n    })\n  };\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_omggif","_interopRequireDefault","require","_gifwrap","MIME_TYPE","_default","mime","_defineProperty2","constants","MIME_GIF","decoders","data","gifObj","GifReader","gifData","Buffer","alloc","width","height","decodeAndBlitFrameRGBA","encoders","bitmap","BitmapImage","GifUtil","quantizeDekker","newFrame","GifFrame","gifCodec","GifCodec","encodeGif","then","newGif","buffer"],"sources":["/Users/wolfejam/HEXTRA-3/node_modules/@jimp/gif/src/index.js"],"sourcesContent":["import GIF from \"omggif\";\nimport { GifUtil, GifFrame, BitmapImage, GifCodec } from \"gifwrap\";\n\nconst MIME_TYPE = \"image/gif\";\n\nexport default () => ({\n  mime: { [MIME_TYPE]: [\"gif\"] },\n\n  constants: {\n    MIME_GIF: MIME_TYPE,\n  },\n\n  decoders: {\n    [MIME_TYPE]: (data) => {\n      const gifObj = new GIF.GifReader(data);\n      const gifData = Buffer.alloc(gifObj.width * gifObj.height * 4);\n\n      gifObj.decodeAndBlitFrameRGBA(0, gifData);\n\n      return {\n        data: gifData,\n        width: gifObj.width,\n        height: gifObj.height,\n      };\n    },\n  },\n\n  encoders: {\n    [MIME_TYPE]: (data) => {\n      const bitmap = new BitmapImage(data.bitmap);\n      GifUtil.quantizeDekker(bitmap, 256);\n      const newFrame = new GifFrame(bitmap);\n      const gifCodec = new GifCodec();\n      return gifCodec.encodeGif([newFrame], {}).then((newGif) => {\n        return newGif.buffer;\n      });\n    },\n  },\n});\n"],"mappings":";;;;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AAEA,IAAME,SAAS,GAAG,WAAlB;eAEe,SAAAC,SAAA;EAAA,OAAO;IACpBC,IAAI,MAAAC,gBAAA,iBAAKH,SAAL,EAAiB,CAAC,KAAD,CAAjB,CADgB;IAGpBI,SAAS,EAAE;MACTC,QAAQ,EAAEL;IADD,CAHS;IAOpBM,QAAQ,MAAAH,gBAAA,iBACLH,SADK,EACO,UAACO,IAAD,EAAU;MACrB,IAAMC,MAAM,GAAG,IAAIZ,OAAA,YAAIa,SAAR,CAAkBF,IAAlB,CAAf;MACA,IAAMG,OAAO,GAAGC,MAAM,CAACC,KAAP,CAAaJ,MAAM,CAACK,KAAP,GAAeL,MAAM,CAACM,MAAtB,GAA+B,CAA5C,CAAhB;MAEAN,MAAM,CAACO,sBAAP,CAA8B,CAA9B,EAAiCL,OAAjC;MAEA,OAAO;QACLH,IAAI,EAAEG,OADD;QAELG,KAAK,EAAEL,MAAM,CAACK,KAFT;QAGLC,MAAM,EAAEN,MAAM,CAACM;MAHV,CAAP;IAKD,CAZK,CAPY;IAsBpBE,QAAQ,MAAAb,gBAAA,iBACLH,SADK,EACO,UAACO,IAAD,EAAU;MACrB,IAAMU,MAAM,GAAG,IAAIlB,QAAA,CAAAmB,WAAJ,CAAgBX,IAAI,CAACU,MAArB,CAAf;MACAlB,QAAA,CAAAoB,OAAA,CAAQC,cAAR,CAAuBH,MAAvB,EAA+B,GAA/B;MACA,IAAMI,QAAQ,GAAG,IAAItB,QAAA,CAAAuB,QAAJ,CAAaL,MAAb,CAAjB;MACA,IAAMM,QAAQ,GAAG,IAAIxB,QAAA,CAAAyB,QAAJ,EAAjB;MACA,OAAOD,QAAQ,CAACE,SAAT,CAAmB,CAACJ,QAAD,CAAnB,EAA+B,EAA/B,EAAmCK,IAAnC,CAAwC,UAACC,MAAD,EAAY;QACzD,OAAOA,MAAM,CAACC,MAAd;MACD,CAFM,CAAP;IAGD,CATK;EAtBY,CAAP;AAAA,C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}